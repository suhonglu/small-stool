(function() {
    !function(a, b) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define(b) : a.ES6Promise = b();
    }(this, function() {
        "use strict";
        function f(a) {
            var b = typeof a;
            return null !== a && ("object" == b || "function" == b);
        }
        function D(a) {
            return "function" == typeof a;
        }
        function n() {
            return "undefined" == typeof G ? e() : function() {
                G(c);
            };
        }
        function e() {
            var a = setTimeout;
            return function() {
                return a(c, 1);
            };
        }
        function c() {
            for (var a = 0; a < B; a += 2) {
                var b = V[a], c = V[a + 1];
                b(c), V[a] = void 0, V[a + 1] = void 0;
            }
            B = 0;
        }
        function a(a, b) {
            var c = arguments, d = this, e = new this.constructor(h);
            void 0 === e[X] && K(e);
            var f = d._state;
            return f ? !function() {
                var a = c[f - 1];
                I(function() {
                    return F(f, e, a, d._result);
                });
            }() : j(d, e, a, b), e;
        }
        function s(a) {
            var b = this;
            if (a && "object" == typeof a && a.constructor === b) return a;
            var c = new b(h);
            return v(c, a), c;
        }
        function h() {}
        function i() {
            return new TypeError("You cannot resolve a promise with itself");
        }
        function p() {
            return new TypeError("A promises callback cannot return that same promise.");
        }
        function d(a) {
            try {
                return a.then;
            } catch (a) {
                return $.error = a, $;
            }
        }
        function u(a, b, c, d) {
            try {
                a.call(b, c, d);
            } catch (a) {
                return a;
            }
        }
        function o(a, b, c) {
            I(function(a) {
                var d = !1, e = u(c, b, function(c) {
                    d || (d = !0, b === c ? w(a, c) : v(a, c));
                }, function(b) {
                    d || (d = !0, y(a, b));
                }, "Settle: " + (a._label || " unknown promise"));
                !d && e && (d = !0, y(a, e));
            }, a);
        }
        function m(a, b) {
            b._state === Y ? w(a, b._result) : b._state === Z ? y(a, b._result) : j(b, void 0, function(b) {
                return v(a, b);
            }, function(b) {
                return y(a, b);
            });
        }
        function b(b, c, d) {
            c.constructor === b.constructor && d === a && c.constructor.resolve === s ? m(b, c) : d === $ ? (y(b, $.error), 
            $.error = null) : void 0 === d ? w(b, c) : D(d) ? o(b, c, d) : w(b, c);
        }
        function v(a, c) {
            a === c ? y(a, i()) : f(c) ? b(a, c, d(c)) : w(a, c);
        }
        function g(a) {
            a._onerror && a._onerror(a._result), A(a);
        }
        function w(a, b) {
            a._state === W && (a._result = b, a._state = Y, 0 !== a._subscribers.length && I(A, a));
        }
        function y(a, b) {
            a._state === W && (a._state = Z, a._result = b, I(g, a));
        }
        function j(a, b, c, d) {
            var e = a._subscribers, f = e.length;
            a._onerror = null, e[f] = b, e[f + Y] = c, e[f + Z] = d, 0 === f && a._state && I(A, a);
        }
        function A(a) {
            var b = a._subscribers, c = a._state;
            if (0 !== b.length) {
                for (var d = void 0, e = void 0, f = a._result, g = 0; g < b.length; g += 3) d = b[g], 
                e = b[g + c], d ? F(c, d, e, f) : e(f);
                a._subscribers.length = 0;
            }
        }
        function r() {
            this.error = null;
        }
        function E(a, b) {
            try {
                return a(b);
            } catch (a) {
                return _.error = a, _;
            }
        }
        function F(b, d, e, f) {
            var g, h, j, c, a = D(e);
            if (!a) g = f, j = !0; else if (g = E(e, f), g === _ ? (c = !0, h = g.error, g.error = null) : j = !0, 
            d === g) return void y(d, p());
            d._state !== W || (a && j ? v(d, g) : c ? y(d, h) : b === Y ? w(d, g) : b === Z && y(d, g));
        }
        function x(a, b) {
            try {
                b(function(b) {
                    v(a, b);
                }, function(b) {
                    y(a, b);
                });
            } catch (b) {
                y(a, b);
            }
        }
        function C() {
            return aa++;
        }
        function K(a) {
            a[X] = aa++, a._state = void 0, a._result = void 0, a._subscribers = [];
        }
        function k(a, b) {
            this._instanceConstructor = a, this.promise = new a(h), this.promise[X] || K(this.promise), 
            O(b) ? (this.length = b.length, this._remaining = b.length, this._result = Array(this.length), 
            0 === this.length ? w(this.promise, this._result) : (this.length = this.length || 0, 
            this._enumerate(b), 0 === this._remaining && w(this.promise, this._result))) : y(this.promise, M());
        }
        function M() {
            return new Error("Array Methods must be provided an Array");
        }
        function q() {
            throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
        }
        function L() {
            throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
        }
        function N(a) {
            this[X] = C(), this._result = this._state = void 0, this._subscribers = [], h !== a && ("function" != typeof a && q(), 
            this instanceof N ? x(this, a) : L());
        }
        var t = Array.isArray ? Array.isArray : function(a) {
            return "[object Array]" === Object.prototype.toString.call(a);
        };
        var z, O = t, B = 0, G = void 0, P = void 0, I = function(a, b) {
            V[B] = a, V[B + 1] = b, B += 2, 2 == B && (P ? P(c) : z());
        }, J = "undefined" == typeof window ? void 0 : window, Q = J || {}, R = Q.MutationObserver || Q.WebKitMutationObserver, S = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process), T = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel, V = Array(1e3);
        z = S ? function() {
            return function() {
                return process.nextTick(c);
            };
        }() : R ? function() {
            var a = 0, b = new R(c), d = document.createTextNode("");
            return b.observe(d, {
                characterData: !0
            }), function() {
                d.data = a = ++a % 2;
            };
        }() : T ? function() {
            var a = new MessageChannel();
            return a.port1.onmessage = c, function() {
                return a.port2.postMessage(0);
            };
        }() : void 0 === J && "function" == typeof require ? function() {
            try {
                var a = require, b = a("vertx");
                return G = b.runOnLoop || b.runOnContext, n();
            } catch (a) {
                return e();
            }
        }() : e();
        var W, X = Math.random().toString(36).substring(16), Y = 1, Z = 2, $ = new r(), _ = new r(), aa = 0;
        return k.prototype._enumerate = function(a) {
            for (var b = 0; this._state === W && b < a.length; b++) this._eachEntry(a[b], b);
        }, k.prototype._eachEntry = function(c, f) {
            var e = this._instanceConstructor, g = e.resolve;
            if (g === s) {
                var j = d(c);
                if (j === a && c._state !== W) this._settledAt(c._state, f, c._result); else if ("function" != typeof j) this._remaining--, 
                this._result[f] = c; else if (e === N) {
                    var k = new e(h);
                    b(k, c, j), this._willSettleAt(k, f);
                } else this._willSettleAt(new e(function(a) {
                    return a(c);
                }), f);
            } else this._willSettleAt(g(c), f);
        }, k.prototype._settledAt = function(a, b, c) {
            var d = this.promise;
            d._state === W && (this._remaining--, a === Z ? y(d, c) : this._result[b] = c), 
            0 === this._remaining && w(d, this._result);
        }, k.prototype._willSettleAt = function(a, b) {
            var c = this;
            j(a, void 0, function(a) {
                return c._settledAt(Y, b, a);
            }, function(a) {
                return c._settledAt(Z, b, a);
            });
        }, N.all = function(a) {
            return new k(this, a).promise;
        }, N.race = function(a) {
            var b = this;
            return new b(O(a) ? function(c, d) {
                for (var e = a.length, f = 0; f < e; f++) b.resolve(a[f]).then(c, d);
            } : function(a, b) {
                return b(new TypeError("You must pass an array to race."));
            });
        }, N.resolve = s, N.reject = function(a) {
            var b = this, c = new b(h);
            return y(c, a), c;
        }, N._setScheduler = function(a) {
            P = a;
        }, N._setAsap = function(a) {
            I = a;
        }, N._asap = I, N.prototype = {
            constructor: N,
            then: a,
            catch: function(a) {
                return this.then(null, a);
            }
        }, N.polyfill = function() {
            var a;
            if ("undefined" != typeof global) a = global; else if ("undefined" != typeof self) a = self; else try {
                a = Function("return this")();
            } catch (a) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
            }
            var b = a.Promise;
            if (b) {
                var c = null;
                try {
                    c = Object.prototype.toString.call(b.resolve());
                } catch (a) {}
                if ("[object Promise]" === c && !b.cast) return;
            }
            a.Promise = N;
        }, N.Promise = N, N;
    });
})();